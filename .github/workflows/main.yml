name: .NET 8 Build, Test, Docker Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore HealthMed.Hub.sln

      - name: Build
        run: dotnet build HealthMed.Hub.sln --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: needs.build-and-test.result == 'success'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and tag Docker image for API
        run: |
          docker build -f HealthMed.Hub.Api/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/healthmedhubapi:v1 .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push the image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/healthmedhubapi:v1
